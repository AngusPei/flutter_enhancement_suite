<?xml version="1.0" encoding="UTF-8"?>
<templateSet group="Flutter">

    <!--    Material Package Import-->
    <template name="fimpmat"
              value="import 'package:flutter/material.dart';"
              description="Import the Material package"
              toReformat="true"
              toShortenFQNames="true">
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    Cupertino Package Import-->
    <template name="fimpcup"
              value="import 'package:flutter/cupertino.dart';"
              description="Import the Cupertino package"
              toReformat="true"
              toShortenFQNames="true">
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    AnimatedBuilder    -->
    <template name="fanimbuilder"
              value="AnimatedBuilder(&#10;  animation: $animationController$,&#10;  child: $childWidget$,&#10;  builder: (BuildContext context, Widget child) {&#10;    return $buildWidget$;&#10;  },&#10;);"
              description="New AnimatedBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="animationController"
                  expression="&quot;animationController&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="childWidget"
                  expression="&quot;childWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="buildWidget"
                  expression="&quot;buildWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    AspectRatio-->
    <template name="faspratio"
              value="AspectRatio(&#10;aspectRatio: $aspectRatio$,&#10;child: $child$&#10;)"
              description="New AspectRatio widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="aspectRatio"
                  expression="&quot;aspectRatio&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="child"
                  expression="&quot;child&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Center-->
    <template name="fcent"
              value="Center(child: $child$)"
              description="New Center widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="goto"
                  expression="&quot;&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Column-->
    <template name="fcol"
              value="Column(&#10;  children: &lt;Widget&gt;[$goto$],&#10;)"
              description="New Column widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="goto"
                  expression="&quot;&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Container-->
    <template name="fcont"
              value="Container(&#10;  child: $Widget$(),&#10;)"
              description="New Container widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="Widget"
                  expression="&quot;Widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    CustomClipper-->
    <template name="fcustomclipper"
              value="class $name$Clipper extends CustomClipper&lt;Path&gt; {&#10;    &#10;@override&#10;Path getClip(Size size) {&#10;// TODO: implement getClip&#10;}&#10;&#10;@override&#10;bool shouldReclip(CustomClipper&lt;Path&gt; oldClipper) {&#10;// TODO: implement shouldReclip&#10;}&#10;}"
              description="Create a CustomClipper widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="name"
                  expression="&quot;name&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    CustomPainter-->
    <template name="fcustompainter"
              value="class $name$Painter extends CustomPainter {&#10;&#10;@override&#10;void paint(Canvas canvas, Size size) {&#10;//TODO Implement paint&#10;}&#10;&#10;      @override&#10;bool shouldRepaint($name$Painter oldDelegate) {&#10;//TODO Implement shouldRepaint&#10;}&#10;&#10;@override&#10;bool shouldRebuildSemantics($name$Painter oldDelegate) {&#10;//TODO Implement shouldRebuildSemantics&#10;}&#10;}"
              description="Create a CustomPainter widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="name"
                  expression="&quot;name&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_TOPLEVEL"
                    value="true"/>
        </context>
    </template>

    <!--    CustomScrollView-->
    <template name="fcustomscroll"
              value="CustomScrollView(&#10;slivers: &lt;Widget&gt;[&#10;$childWidget1$,&#10;$childWidget2$,&#10;$childWidget3$,&#10;],&#10;)"
              description="New CustomScrollView widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="childWidget1"
                  expression="&quot;childWidget1&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="childWidget2"
                  expression="&quot;childWidget2&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="childWidget3"
                  expression="&quot;childWidget3&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.all-->
    <template name="finall"
              value="EdgeInsets.all($value$)$END$"
              description="New EdgeInsets.all widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="value"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.only-->
    <template name="finonly"
              value="EdgeInsets.only($value$)$END$"
              description="New EdgeInsets.only widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="value"
                  expression=""
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.symmetric-->
    <template name="finsym"
              value="EdgeInsets.symmetric(vertical: $vertical$, horizontal: $horizontal$)$END$"
              description="New EdgeInsets.symmetric widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="vertical"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="horizontal"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.symmetric (horizontal)-->
    <template name="finsym"
              value="EdgeInsets.symmetric(horizontal: $horizontal$)$END$"
              description="New EdgeInsets.symmetric horizontally widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="horizontal"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    EdgeInsets.symmetric (vertical)-->
    <template name="finsym"
              value="EdgeInsets.symmetric(vertical: $vertical$)$END$"
              description="New EdgeInsets.symmetric vertically widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="vertical"
                  expression="&quot;8&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Expanded-->
    <template name="fexp"
              value="Expanded(child: $child$)$END$"
              description="New Expanded widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="child"
                  expression="&quot;null&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    FutureBuilder-->
    <template name="ffuturebuilder"
              value="FutureBuilder(&#10;future: $FUTURE$,initialData: $INITIAL$,builder: (BuildContext context, AsyncSnapshot snapshot) {if (snapshot.hasData) {if (snapshot.data!=null) {return $WIDGET$;} else {return CircularProgressIndicator();}}),"
              description="New FutureBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="FUTURE"
                  expression="&quot;future&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="INITIAL"
                  expression="&quot;initialValue&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="WIDGET"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Icon-->
    <template name="ficon"
              value="Icon($iconGroup$.$iconName$)$END$"
              description="New Icon widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="iconGroup"
                  expression="&quot;Icons&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="iconName"
                  expression="&quot;clear&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    LayoutBuilder-->
    <template name="flayoutbuilder"
              value="LayoutBuilder(&#10;builder: (BuildContext context, BoxConstraints constraints) {&#10;return $widget$;&#10;},&#10;),"
              description="New LayoutBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="widget"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    ListView.builder-->
    <template name="flistvbuilder"
              value="ListView.builder(itemCount: $COUNT$,itemBuilder: (BuildContext context, int index) {return $WIDGET$;}, ),"
              description="New ListView.builder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="COUNT"
                  expression="&quot;future&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="WIDGET"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    OrientationBuilder-->
    <template name="forientbuilder"
              value="OrientationBuilder(&#10;  builder: (BuildContext context, Orientation orientation) {&#10;return GridView.count(&#10;// Create a grid with 2 columns in portrait mode, or 3 columns in&#10;// landscape mode.&#10;crossAxisCount: orientation == Orientation.portrait ? 2 : 3,&#10;);&#10;},&#10;);"
              description="New OrientationBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Row-->
    <template name="frow"
              value="Row(&#10;  children: &lt;Widget&gt;[$goto$],&#10;)"
              description="New Row widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="goto"
                  expression="&quot;&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold-->
    <template name="fscaffold"
              value="Scaffold(&#10;body: $body$,&#10;)$END$"
              description="New Scaffold widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="body"
                  expression="&quot;bodyWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold with AppBar-->
    <template name="fscaffoldab"
              value="Scaffold(&#10;appBar: AppBar(&#10;title: Text('$appbarTitle$'),&#10;),&#10;body: $body$&#10;)$END$"
              description="New Scaffold widget with AppBar"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="appbarTitle"
                  expression="&quot;appbarTitle&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="body"
                  expression="&quot;bodyWidget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold with AppBar and Bottom Nav Bar-->
    <template name="fscaffoldabbn"
              value="int _index = 0; // Make sure this is outside build(), otherwise every setState will change the value back to 0 &#10;&#10;Scaffold(&#10;appBar: AppBar(&#10;title: Text('$appbarTitle$'),&#10;),&#10;body: Center(&#10;child: Container(child: Text('You are looking at the message for bottom navigation item $_index')),&#10;),&#10;bottomNavigationBar: BottomNavigationBar(&#10;onTap: (tappedItemIndex) =&gt; setState(() {&#10;_index = tappedItemIndex;&#10; }),&#10;currentIndex: _index,&#10;items: [&#10;BottomNavigationBarItem(icon: Icon(Icons.av_timer), title: Text('$navBarItem1Text$')),&#10;BottomNavigationBarItem(icon: Icon(Icons.add), title: Text('$navBarItem2Text$'))&#10;])&#10;)$END$"
              description="New Scaffold widget with AppBar &amp; Bottom Nav Bar"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="appbarTitle"
                  expression="&quot;appbarTitle&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="navBarItem1Text"
                  expression="&quot;navBarItem1Text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="navBarItem2Text"
                  expression="&quot;navBarItem2Text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold with AppBar and Fab-->
    <template name="fscaffoldabfab"
              value="int _index = 0; // Make sure this is outside build(), otherwise every setState will chage the value back to 0 &#10;&#10;Scaffold(&#10;appBar: AppBar(&#10;        title: Text('$appbarTitle$'),&#10;),&#10;body: Center(&#10;child: Container(child: Text('You tapped the FAB $_index times')),&#10;),&#10;floatingActionButton: FloatingActionButton(&#10;onPressed: () =&gt; setState(() {&#10;_index++;&#10;}),&#10;tooltip: 'Increment Counter',&#10;child: Icon(Icons.add), //Change Icon&#10;),&#10;floatingActionButtonLocation: FloatingActionButtonLocation.endFloat, //Change for different locations&#10;)$END$"
              description="New Scaffold widget with AppBar and Fab"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="appbarTitle"
                  expression="&quot;appbarTitle&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Scaffold with AppBar, Fab and Bottom Nav Bar-->
    <template name="fscaffoldall"
              value="int _index = 0; // Make sure this is outside build(), otherwise every setState will chage the value back to 0 &#10;&#10;Scaffold(&#10;appBar: AppBar(&#10;title: Text('$appbarTitle$'),&#10;),&#10;body: Center(&#10;child: Container(child: Text('You are looking at the message for bottom navigation item $_index')),&#10;),&#10;bottomNavigationBar: BottomNavigationBar(&#10;onTap: (tappedItemIndex)=&gt; setState(() {&#10;_index = tappedItemIndex;&#10;}),&#10;currentIndex: _index,&#10;items: [&#10;BottomNavigationBarItem(icon: Icon(Icons.av_timer), title: Text('$navBarItem1Text$')),&#10;BottomNavigationBarItem(icon: Icon(Icons.add), title: Text('$navBarItem2Text$'))&#10;]),&#10;floatingActionButton: FloatingActionButton(&#10;onPressed: () =&gt; setState(() {&#10;=_index = 0;&#10;}),&#10;tooltip: 'Reset Navigation Index',&#10;        child: Icon(Icons.clear), //Change Icon&#10;),&#10;floatingActionButtonLocation: FloatingActionButtonLocation.endFloat, //Change for different locations&#10;)$END$"
              description="New Scaffold widget with AppBar, Fab and Bottom Nav Bar"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="appbarTitle"
                  expression="&quot;appbarTitle&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="navBarItem1Text"
                  expression="&quot;navBarItem1Text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="navBarItem2Text"
                  expression="&quot;navBarItem2Text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    showDialog-->
    <template name="fdialog"
              value="showDialog&lt;void&gt;(&#10;context: $context$,&#10;barrierDismissible: $dismiss$, // false = user must tap button, true = tap outside dialog&#10;builder: (BuildContext dialogContext){&#10;return AlertDialog(&#10;title: Text('$title$'),&#10;content: Text('$content$'),&#10;actions: &lt;Widget&gt;[&#10;FlatButton(&#10;child: Text('$buttonText$'),&#10;onPressed: () {&#10;Navigator.of(dialogContext).pop(); // Dismiss alert dialog&#10;},&#10;),&#10;],&#10;);&#10;},&#10;);"
              description="New Dialog widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="context"
                  expression="&quot;context&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="dismiss"
                  expression="&quot;barrierDismissible&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="title"
                  expression="&quot;title&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="content"
                  expression="&quot;dialogBody&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="buttonText"
                  expression="&quot;buttonText&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    SingleChildScrollView-->
    <template name="fsinglechildsc"
              value="SingleChildScrollView(&#10;controller: $controller$, // Optional&#10;child: $widget$,&#10;),"
              description="New SingleChildScrollView widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="controller"
                  expression="&quot;controller&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="widget"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    SizedBox -->
    <template name="fsb"
              value="SizedBox(width: $width$, height: $height$)$END$"
              description="New SizedBox widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="width"
                  expression="&quot;0&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="height"
                  expression="&quot;0&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    SizedBox (height)-->
    <template name="fsbh"
              value="SizedBox(height: $height$)$END$"
              description="New SizedBox by height widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="height"
                  expression="&quot;0&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    SizedBox (width)-->
    <template name="fsbw"
              value="SizedBox(width: $width$)$END$"
              description="New SizedBox by width widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="width"
                  expression="&quot;0&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    StatefulBuilder-->
    <template name="fstfulbuilder"
              value="StatefulBuilder(&#10;builder: (BuildContext context, StateSetter setState){&#10;return $widget$&#10;}&#10;),"
              description="New StatefulBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="widget"
                  expression="&quot;widget&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    StreamBuilder-->
    <template name="fstreambuilder"
              value="StreamBuilder(stream: $STREAM$, builder: (BuildContext context, AsyncSnapshot snapshot) {if(snapshot.hasError) return $ERRORWIDGET$; switch (snapshot.connectionState) {case ConnectionState.none: return $DEFAULTWIDGET$;case ConnectionState.waiting: return $LOADINGWIDGET$;case ConnectionState.active: return $ACTIVEWIDGET$;case ConnectionState.done: return $FINISHEDWIDGET$;}return null; // unreachable}, ),"
              description="New StreamBuilder widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="STREAM"
                  expression="&quot;stream&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="DEFAULTWIDGET"
                  expression="&quot;ConnectionNone&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="LOADINGWIDGET"
                  expression="&quot;ConnectionWaiting&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="ACTIVEWIDGET"
                  expression="&quot;ConnectionActive&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="FINISHEDWIDGET"
                  expression="&quot;ConnectionDone&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

    <!--    Text-->
    <template name="ftext"
              value="Text('$text$')"
              description="New Text widget"
              toReformat="true"
              toShortenFQNames="true">
        <variable name="text"
                  expression="&quot;text&quot;"
                  defaultValue=""
                  alwaysStopAt="true"/>
        <context>
            <option name="DART_STATEMENT"
                    value="true"/>
        </context>
    </template>

</templateSet>